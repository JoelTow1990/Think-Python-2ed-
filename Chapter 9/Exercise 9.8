"""
Exercise 9.8. Here’s another Car Talk Puzzler (http: // www. cartalk. com/ content/
puzzlers ):

“I was driving on the highway the other day and I happened to notice my odometer.
Like most odometers, it shows six digits, in whole miles only. So, if my car had 300,000
miles, for example, I’d see 3-0-0-0-0-0.

“Now, what I saw that day was very interesting. I noticed that the last 4 digits were
palindromic; that is, they read the same forward as backward. For example, 5-4-4-5 is a
palindrome, so my odometer could have read 3-1-5-4-4-5.

“One mile later, the last 5 numbers were palindromic. For example, it could have read
3-6-5-4-5-6. One mile after that, the middle 4 out of 6 numbers were palindromic. And
you ready for this? One mile later, all 6 were palindromic!

“The question is, what was on the odometer when I first looked?”

Write a Python program that tests all the six-digit numbers and prints any numbers that satisfy
these requirements.
"""

def part_palindrome(num, start, length):
    """Checks if there is a palindrome in string representation of num, start
    and finish indicate the substring of the number to check for palindrome.
    
    num: integer
    start: string index to start looking
    length: length of palindrome to look for
    """
    
    check = str(num)[start:start+length]
    return check == check[::-1]

def check(num):
    """Checks if the integer num has the desired properties.

    num int
    """
    return (part_palindrome(num, 2, 4) and
            part_palindrome(num+1, 1, 5) and
            part_palindrome(num+2, 1, 4) and
            part_palindrome(num+3, 0, 6))
    
def check_odomoter():
    for i in range(100000,1000000):
        if check(i):
            print(i)
